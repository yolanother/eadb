[ -n "$BASH_VERSION" ] || [ -n "$ZSH_VERSION" ] || return

# Note: functins leading with eadb_* or eadb-* will be used instead of being passed
# to adb. eadb-* functions indicate a function that will have eadb-select run for them
# before being executed. eadb_* functions will have to handle calling eadb-select on their own.

function eadb {

    function adb-push-with-devid {
        local device=$1
        shift
        local last="${@: -1}"
        for file in "${@:1:($#-1)}"; do
            echo -n 'Pushing '
            echo -n $file
            echo -n '->'
            echo "$device:$last"
            echo -n "  "
            adb -s $device push "$file" "$last"
        done
    }

    function eadb_select {
        if [ -n "$ADB_DEFAULT_DEVICE" ]; then
            echo "$ADB_DEFAULT_DEVICE"
        else
            local dids=`adb devices 2>&1 | /bin/grep 'sideload$\|device$\|recovery$' | awk '{print $1}'`
            if [ `echo "$dids" | wc -l` == "1" ]; then
                name=`cat "$HOME/.eadb/$dids" 2>/dev/null`
                if [ -n "$name" ]; then
                    echo "Only one device found using $name ($dids)" >&2
                else
                    echo "Only one device found using $dids" >&2
                fi
                devid[0]="$dids"
                DEVICE=0
                DEV="$dids"
                echo -n $DEV
                return
            fi

            if [ "all" != "$1" ]; then
                echo "Please select a device:" >&2
                if [ "$1" == "true" ]; then
                    echo "  a) Run on all devices" >&2
                fi
            fi

            local devs=`adb devices 2>&1 | /bin/grep 'sideload$\|device$\|recovery$' | sed 's/.\(sideload\|device\|recovery\)/~\1/g'`
            local d=1
            for line in $devs; do
                if [ "device" != "$line" ] && [ "recovery" != "$line" ] && [ "sideload" != "$line" ] && [ -n "$line"  ] ; then
                    mode[$d]=`echo "$line" | /bin/grep -o '~.*' | sed 's/^~//'`
                    line=`echo "$line" | sed 's/~.*//'`
                    devid[$d]="$line"
                    if [ "${mode[$d]}" == "device" ]; then
                        mod=`eadb_model-for $line`
                    else
                        mod=""
                    fi
                    modid[$d]="$mod"
                    if [ "all" != "$1" ]; then
                        if [ -f "$HOME/.eadb/$line" ]; then
                            name=`cat "$HOME/.eadb/$line"`
                            echo "  $d) $name - $line $mod" >&2
                        else
                            echo "  $d) $line $mod" >&2 
                        fi
                    fi
                    d=`expr $d + 1`
                fi
            done

            if [ "$d" == "2" ]; then
                echo -n "${devid[1]}"
            else
                if [ "all" != "$1" ]; then
                    read -p "  Device Number: " device
                fi

                if [ "a" == "$device" ] || [ "all" == "$1" ]; then
                    adb devices 2>&1 | /bin/grep 'sideload$\|device$\|recovery$' | awk '{print $1}'
                else
                    echo "${devid[$device]}"
                fi
            fi
        fi
    }

    function eadb_clogcat-disable-timing {
        if [ -f "$HOME/.eadb.logcat" ]; then
            if [ "$1" != "-q" ]; then
                echo "Disabling timing"
            fi
            sed -i '/THREADTIME/d' $HOME/.eadb.logcat
        fi
    }

    function eadb_clogcat-enable-timing {
        clogcat-disable-timing -q
        if [ "$1" != "-q" ]; then
            echo "Enabling timing"
        fi
        echo 'THREADTIME="-v threadtime"' >> $HOME/.eadb.logcat
    }

    function eadb_clogcat-always-log-clear {
        if [ -f "$HOME/.eadb.logcat" ]; then
            sed -i '/LOGCAT_ALWAYSLOG/d' $HOME/.eadb.logcat
        fi
    }

    function eadb_clogcat-always-log {
        clogcat-always-log-clear
        echo "LOGCAT_ALWAYSLOG=\"$1\"" >> $HOME/.eadb.logcat
    }

    function eadb-clogcat {
        if [ -f "$HOME/.eadb.logcat" ]; then
            source "$HOME/.eadb.logcat"
        fi

        if [ "$(type -t eadb-clogcat$1)" = function ] && [ -n "$1" ]; then
            eadb-clogcat$1
            return
        fi

        local cmd="_eadb logcat $THREADTIME"

        if [ "$1" == "plogcat" ] || [ "$1" == "plog" ]; then
            shift
            if [ -n "$1" ]; then
                cmd="eadb-plogcat $1 $THREADTIME"
                shift
            fi
        fi

        if [ "$1" == "-" ]; then
            cmd="read log"
            shift
        elif [ "http" == "${1:0:4}" ]; then
            local filename="`echo $1 | sed 's/\//_/g'`"
            if [ ! -f "/tmp/$filename" ]; then
                curl $1 > "/tmp/$filename"
                if [ -n "`grep "<title>401 - Unauthorized: Access is denied due to invalid credentials.</title>" /tmp/$filename`" ]; then
                    echo "Access denied. Could not retrieve log."
                    rm "/tmp/$filename"
                    return
                fi
            fi
            cmd="cat /tmp/$filename"
            shift
        fi
        if [ -n "$THREADTIME" ]; then
            if [ -n "$1" ]; then
                $cmd | grep --color=never --line-buffered "E AndroidRuntime\|E ActivityThread\|W System.err\|$LOGCAT_ALWAYSLOG\|`implode "\|" "$@"`" | GREP_COLOR="1;31" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *E[^:]*: \|$" | GREP_COLOR="1;33" grep --line-buffered --color=always "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *W[^:]*: \|$" | GREP_COLOR="1;32" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *D[^:]*: \|$" | GREP_COLOR="1;90" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *V[^:]*: \|$" | GREP_COLOR="1;34" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *I[^:]*: \|$" | GREP_COLOR="1;36" grep --color=always --line-buffered "`implode "\|" "$@"`\|$" | GREP_COLOR="1;35" grep --color=always --line-buffered "$LOGCAT_ALWAYSLOG\|$"
            else
                $cmd | grep --color=never --line-buffered "E AndroidRuntime\|E ActivityThread\|W System.err\|$LOGCAT_ALWAYSLOG" | GREP_COLOR="1;31" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *E[^:]*: \|$" | GREP_COLOR="1;33" grep --line-buffered --color=always "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *W[^:]*: \|$" | GREP_COLOR="1;32" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *D[^:]*: \|$" | GREP_COLOR="1;90" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *V[^:]*: \|$" | GREP_COLOR="1;34" grep --color=always --line-buffered "^[^ ]* *[^ ]* *[^ ]* *[^ ]* *I[^:]*: \|$" | GREP_COLOR="1;35" grep --color=always --line-buffered "$LOGCAT_ALWAYSLOG\|$"
            fi
        else
            if [ -n "$1" ]; then
                $cmd | grep --color=never --line-buffered "E/AndroidRuntime\|E/ActivityThread\|W/System.err\|$LOGCAT_ALWAYSLOG\|`implode "\|" "$@"`" | GREP_COLOR="1;31" grep --color=always --line-buffered "E/[^:]*: \|$" | GREP_COLOR="1;33" grep --line-buffered --color=always "W/[^:]*: \|$" | GREP_COLOR="1;32" grep --color=always --line-buffered "D/[^:]*: \|$" | GREP_COLOR="1;90" grep --color=always --line-buffered "V/[^:]*: \|$" | GREP_COLOR="1;34" grep --color=always --line-buffered "I/[^:]*: \|$" | GREP_COLOR="1;36" grep --color=always --line-buffered "`implode "\|" "$@"`\|$" | GREP_COLOR="1;35" grep --color=always --line-buffered "$LOGCAT_ALWAYSLOG\|$"
            else
                $cmd | grep --color=never --line-buffered "E/AndroidRuntime\|E/ActivityThread\|W/System.err\|$LOGCAT_ALWAYSLOG" | GREP_COLOR="1;31" grep --color=always --line-buffered "E/[^:]*: \|$" | GREP_COLOR="1;33" grep --line-buffered --color=always "W/[^:]*: \|$" | GREP_COLOR="1;32" grep --color=always --line-buffered "D/[^:]*: \|$" | GREP_COLOR="1;90" grep --color=always --line-buffered "V/[^:]*: \|$" | GREP_COLOR="1;34" grep --color=always --line-buffered "I/[^:]*: \|$" | GREP_COLOR="1;35" grep --color=always --line-buffered "$LOGCAT_ALWAYSLOG\|$"
            fi
        fi
    }

    function eadb-get-process-list {
        _eadb shell ps | /bin/grep $1 | awk '{print $2}' | sed 's/\n/|/g' | tr "\\n" " " | sed "s/ $/\n/g" | sed "s/ /\\\\\\|/g"
    }

    function eadb-watch-process {
        interval=1
        if [ -n "$2" ]; then
            interval=$2
        fi
        process="$1"
        processes=`eadb-get-process-list "$process"`
        lastprocesses="$processes"
        while [ -n "$processes" ] && [ "$processes" == "$lastprocesses" ]; do
            sleep $interval
            lastprocesses="$processes"
            processes=`eadb-get-process-list "$process"`
        done
    }

    function eadb_screenshot {
        if [ -z "$1" ]; then
           echo "Usage: eadb screenshot /path/to/screenshot.png"
        else
            tmp=`mktemp`
            echo -n "  "
            devices=`eadb_select true`
            for device in $devices; do
                local file="$1"
                if [ "1" != `echo "$devices" | wc -l` ]; then
                    file="`echo "$1" | cut -f 1 -d '.'`.$device.png"
                fi

                echo "Grabbing screenshot from $device --> $file"
                ADB_CURRENT_DEVICE=device
                _eadb -s $device shell screencap -p /sdcard/`basename $tmp`
                _eadb -s $device pull /sdcard/`basename $tmp` $file
                _eadb -s $device shell rm /sdcard/`basename $tmp`
            done
            echo "  Screenshot stored in $1"
        fi
    }

    function eadb_unsetdefault {
        unset ADB_DEFAULT_DEVICE
        unset ADB_DEFAULT_MODEL    
    }

    function eadb-model {
        _eadb shell getprop ro.product.model
    }

    function eadb_model-for {
        if [ ! -d "$HOME/.eadb" ]; then
            mkdir "$HOME/.eadb"
        fi

        if [ ! -f "$HOME/.eadb/models" ]; then
            touch $HOME/.eadb/models
        fi

        local model="`grep $1 $HOME/.eadb/models | awk '{ print substr($0, index($0,$2)) }' | uniq`"
        if [ -z "$model" ]; then
            model="`adb -s $1 shell getprop ro.product.model | awk '{ print substr($0, index($0,$0)) }'`"
            if [ -n "$model" ]; then
                printf "%-32s %s\n" "$1" "$model" >> ~/.eadb/models
            fi
        fi

        echo "$model"
    }

    function eadb-start {
        if [ -z "$1" ]; then
            echo "Usage: eadb start application.package.name (applaction.package.name.activity)"
        else
            device=$(eadb_select)
            adb wait-for-device 2>/dev/null
            if [ -z "$2" ]; then
                echo $device | xargs -i adb -s {} shell am start -a android.intent.action.MAIN -n $1
            else
                echo $device | xargs -i adb -s {} shell am start -n $1/$2
            fi
        fi
    }

    function eadb-slogcat {
        if [ "$1" == "-p" ]; then
            shift
            command="plogcat $1"
            shift
        else
            command=logcat
        fi


        lcparams=`echo "$@" | grep -o "[a-zA-Z0-9]*:[A-Z]"`
        search=`echo ""$@"" | sed 's/[A-Za-z0-9]*:[A-Z]//g' | sed 's/ /\\\\|[IDWEV]\//g' | sed 's/\\\\|\[IDWEV\]\/$//g'`
        if [ -z "$search" ]; then
            _eadb $command $lcparams
        else
            _eadb $command $lcparams | grep "E/AndroidRuntime\|[IDWEV]/$search"
        fi
    }

    function eadb-plogcat {
        if [ -z "$1" ]; then
            echo "Usage: eadb plogcat com.some.package"
            return
        fi
        package="$1"
        pid=`eadb-get-process-list $package`
        if [ -n "$pid" ]; then
            _eadb logcat "$@" | /bin/grep "$pid" &
            pid=$!
            eadb-watch-process $package
            kill $pid
            wait $! 2>/dev/null
        else
            echo "Process for $1 is not currently running."
        fi
    }

    function eadb-wait {
        devid=""
        type="device"
        if [ "$1" == "-s" ]; then
           devid="$2"
            if [ -n "$3" ]; then
                type="$3"
            fi
        else
            if [ -n "$1" ]; then
                type="$1"
            fi
        fi
        devinfo=`adb devices | /bin/grep -v "List of devices attached\|Only one device" | /bin/grep . | /bin/grep "$devid" | /bin/grep "$type" `
        if [ -z "$devinfo" ]; then
            sleep .5
            _eadb wait "$@"
       fi
    }

    function eadb_setdefault {
        eadb_unsetdefault
        export ADB_DEFAULT_DEVICE=`eadb_select true`
    }

    function eadb_name {
        device=$(eadb_select)
        read -p "Please provide a name for $device: " NAME
        if [ ! -d $HOME/.eadb ]; then
            mkdir $HOME/.eadb 2>/dev/null
        fi
        echo "$NAME" > $HOME/.eadb/$device
    }

    function eadb-install-mirroring {
        _eadb -s $device shell sqlite3 /data/data/com.google.android.gsf/databases/gservices.db "INSERT INTO overrides (name, value) VALUES ('gms:cast:mirroring_enabled', 'true');"
        _eadb -s $device shell sqlite3 /data/data/com.google.android.gsf/databases/gservices.db "UPDATE overrides SET value='true' WHERE name='gms:cast:mirroring_enabled';"
        _eadb -s $device shell am force-stop com.google.android.gsf
        _eadb -s $device shell am force-stop com.google.android.gms
        _eadb -s $device shell am force-stop com.google.android.apps.chromecast.app
    }

    function eadb_showdefault {
        if [ -z "$ADB_DEFAULT_DEVICE" ]; then
            if [ "-q" != "$1" ]; then
                echo "No default device is currently set." >&2
            fi
        else
            if [ "-q" != "$1" ]; then
                echo -n "Default deivce: "  >&2
            fi
            echo "$ADB_DEFAULT_DEVICE $ADB_DEFAULT_MODEL"
        fi
    }

    function eadb-input-text {
        _eadb shell input text "$@"
    }

    # Key code constant: Soft Left key.
    #  Usually situated below the display on phones and used as a multi-function
    #  feature key for selecting a software defined function shown on the bottom left
    #  of the display.
    KEYCODE_SOFT_LEFT=1
    # Key code constant: Soft Right key.
    #  Usually situated below the display on phones and used as a multi-function
    #  feature key for selecting a software defined function shown on the bottom right
    #  of the display.
    KEYCODE_SOFT_RIGHT=2
    # Key code constant: Home key.
    #  This key is handled by the framework and is never delivered to applications.
    KEYCODE_HOME=3
    # Key code constant: Back key.
    KEYCODE_BACK=4
    # Key code constant: Call key.
    KEYCODE_CALL=5
    # Key code constant: End Call key.
    KEYCODE_ENDCALL=6
    # Key code constant: '0' key.
    KEYCODE_0=7
    # Key code constant: '1' key.
    KEYCODE_1=8
    # Key code constant: '2' key.
    KEYCODE_2=9
    # Key code constant: '3' key.
    KEYCODE_3=10
    # Key code constant: '4' key.
    KEYCODE_4=11
    # Key code constant: '5' key.
    KEYCODE_5=12
    # Key code constant: '6' key.
    KEYCODE_6=13
    # Key code constant: '7' key.
    KEYCODE_7=14
    # Key code constant: '8' key.
    KEYCODE_8=15
    # Key code constant: '9' key.
    KEYCODE_9=16
    # Key code constant: '*' key.
    KEYCODE_STAR=17
    # Key code constant: '#' key.
    KEYCODE_POUND=18
    # Key code constant: Directional Pad Up key.
    #  May also be synthesized from trackball motions.
    KEYCODE_DPAD_UP=19
    # Key code constant: Directional Pad Down key.
    #  May also be synthesized from trackball motions.
    KEYCODE_DPAD_DOWN=20
    # Key code constant: Directional Pad Left key.
    #  May also be synthesized from trackball motions.
    KEYCODE_DPAD_LEFT=21
    # Key code constant: Directional Pad Right key.
    #  May also be synthesized from trackball motions.
    KEYCODE_DPAD_RIGHT=22
    # Key code constant: Directional Pad Center key.
    #  May also be synthesized from trackball motions.
    KEYCODE_DPAD_CENTER=23
    # Key code constant: Volume Up key.
    #  Adjusts the speaker volume up.
    KEYCODE_VOLUME_UP=24
    # Key code constant: Volume Down key.
    #  Adjusts the speaker volume down.
    KEYCODE_VOLUME_DOWN=25
    # Key code constant: Power key.
    KEYCODE_POWER=26
    # Key code constant: Camera key.
    #  Used to launch a camera application or take pictures.
    KEYCODE_CAMERA=27
    # Key code constant: Clear key.
    KEYCODE_CLEAR=28
    # Key code constant: 'A' key.
    KEYCODE_A=29
    # Key code constant: 'B' key.
    KEYCODE_B=30
    # Key code constant: 'C' key.
    KEYCODE_C=31
    # Key code constant: 'D' key.
    KEYCODE_D=32
    # Key code constant: 'E' key.
    KEYCODE_E=33
    # Key code constant: 'F' key.
    KEYCODE_F=34
    # Key code constant: 'G' key.
    KEYCODE_G=35
    # Key code constant: 'H' key.
    KEYCODE_H=36
    # Key code constant: 'I' key.
    KEYCODE_I=37
    # Key code constant: 'J' key.
    KEYCODE_J=38
    # Key code constant: 'K' key.
    KEYCODE_K=39
    # Key code constant: 'L' key.
    KEYCODE_L=40
    # Key code constant: 'M' key.
    KEYCODE_M=41
    # Key code constant: 'N' key.
    KEYCODE_N=42
    # Key code constant: 'O' key.
    KEYCODE_O=43
    # Key code constant: 'P' key.
    KEYCODE_P=44
    # Key code constant: 'Q' key.
    KEYCODE_Q=45
    # Key code constant: 'R' key.
    KEYCODE_R=46
    # Key code constant: 'S' key.
    KEYCODE_S=47
    # Key code constant: 'T' key.
    KEYCODE_T=48
    # Key code constant: 'U' key.
    KEYCODE_U=49
    # Key code constant: 'V' key.
    KEYCODE_V=50
    # Key code constant: 'W' key.
    KEYCODE_W=51
    # Key code constant: 'X' key.
    KEYCODE_X=52
    # Key code constant: 'Y' key.
    KEYCODE_Y=53
    # Key code constant: 'Z' key.
    KEYCODE_Z=54
    # Key code constant: ',' key.
    KEYCODE_COMMA=55
    # Key code constant: '.' key.
    KEYCODE_PERIOD=56
    # Key code constant: Left Alt modifier key.
    KEYCODE_ALT_LEFT=57
    # Key code constant: Right Alt modifier key.
    KEYCODE_ALT_RIGHT=58
    # Key code constant: Left Shift modifier key.
    KEYCODE_SHIFT_LEFT=59
    # Key code constant: Right Shift modifier key.
    KEYCODE_SHIFT_RIGHT=60
    # Key code constant: Tab key.
    KEYCODE_TAB=61
    # Key code constant: Space key.
    KEYCODE_SPACE=62
    # Key code constant: Symbol modifier key.
    #  Used to enter alternate symbols.
    KEYCODE_SYM=63
    # Key code constant: Explorer special function key.
    #  Used to launch a browser application.
    KEYCODE_EXPLORER=64
    # Key code constant: Envelope special function key.
    #  Used to launch a mail application.
    KEYCODE_ENVELOPE=65
    # Key code constant: Enter key.
    KEYCODE_ENTER=66
    # Key code constant: Backspace key.
    #  Deletes characters before the insertion point, unlike {@link #KEYCODE_FORWARD_DEL}.
    KEYCODE_DEL=67
    # Key code constant: '`' (backtick) key.
    KEYCODE_GRAVE=68
    # Key code constant: '-'.
    KEYCODE_MINUS=69
    # Key code constant: '=' key.
    KEYCODE_EQUALS=70
    # Key code constant: '[' key.
    KEYCODE_LEFT_BRACKET=71
    # Key code constant: ']' key.
    KEYCODE_RIGHT_BRACKET=72
    # Key code constant: '\' key.
    KEYCODE_BACKSLASH=73
    # Key code constant: '' key.
    KEYCODE_SEMICOLON=74
    # Key code constant: ''' (apostrophe) key.
    KEYCODE_APOSTROPHE=75
    # Key code constant: '/' key.
    KEYCODE_SLASH=76
    # Key code constant: '@' key.
    KEYCODE_AT=77
    # Key code constant: Number modifier key.
    #  Used to enter numeric symbols.
    #  This key is not Num Lock it is more like {@link #KEYCODE_ALT_LEFT} and is
    #  interpreted as an ALT key by {@link android.text.method.MetaKeyKeyListener}.
    KEYCODE_NUM=78
    # Key code constant: Headset Hook key.
    #  Used to hang up calls and stop media.
    KEYCODE_HEADSETHOOK=79
    # Key code constant: Camera Focus key.
    #  Used to focus the camera.
    KEYCODE_FOCUS=80   # *Camera* focus
    # Key code constant: '+' key.
    KEYCODE_PLUS=81
    # Key code constant: Menu key.
    KEYCODE_MENU=82
    # Key code constant: Notification key.
    KEYCODE_NOTIFICATION=83
    # Key code constant: Search key.
    KEYCODE_SEARCH=84
    # Key code constant: Play/Pause media key.
    KEYCODE_MEDIA_PLAY_PAUSE=85
    # Key code constant: Stop media key.
    KEYCODE_MEDIA_STOP=86
    # Key code constant: Play Next media key.
    KEYCODE_MEDIA_NEXT=87
    # Key code constant: Play Previous media key.
    KEYCODE_MEDIA_PREVIOUS=88
    # Key code constant: Rewind media key.
    KEYCODE_MEDIA_REWIND=89
    # Key code constant: Fast Forward media key.
    KEYCODE_MEDIA_FAST_FORWARD=90
    # Key code constant: Mute key.
    #  Mutes the microphone, unlike {@link #KEYCODE_VOLUME_MUTE}.
    KEYCODE_MUTE=91
    # Key code constant: Page Up key.
    KEYCODE_PAGE_UP=92
    # Key code constant: Page Down key.
    KEYCODE_PAGE_DOWN=93
    # Key code constant: Picture Symbols modifier key.
    #  Used to switch symbol sets (Emoji, Kao-moji).
    KEYCODE_PICTSYMBOLS=94   # switch symbol-sets (Emoji,Kao-moji)
    # Key code constant: Switch Charset modifier key.
    #  Used to switch character sets (Kanji, Katakana).
    KEYCODE_SWITCH_CHARSET=95   # switch char-sets (Kanji,Katakana)
    # Key code constant: A Button key.
    #  On a game controller, the A button should be either the button labeled A
    #  or the first button on the bottom row of controller buttons.
    KEYCODE_BUTTON_A=96
    # Key code constant: B Button key.
    #  On a game controller, the B button should be either the button labeled B
    #  or the second button on the bottom row of controller buttons.
    KEYCODE_BUTTON_B=97
    # Key code constant: C Button key.
    #  On a game controller, the C button should be either the button labeled C
    #  or the third button on the bottom row of controller buttons.
    KEYCODE_BUTTON_C=98
    # Key code constant: X Button key.
    #  On a game controller, the X button should be either the button labeled X
    #  or the first button on the upper row of controller buttons.
    KEYCODE_BUTTON_X=99
    # Key code constant: Y Button key.
    #  On a game controller, the Y button should be either the button labeled Y
    #  or the second button on the upper row of controller buttons.
    KEYCODE_BUTTON_Y=100
    # Key code constant: Z Button key.
    #  On a game controller, the Z button should be either the button labeled Z
    #  or the third button on the upper row of controller buttons.
    KEYCODE_BUTTON_Z=101
    # Key code constant: L1 Button key.
    #  On a game controller, the L1 button should be either the button labeled L1 (or L)
    #  or the top left trigger button.
    KEYCODE_BUTTON_L1=102
    # Key code constant: R1 Button key.
    #  On a game controller, the R1 button should be either the button labeled R1 (or R)
    #  or the top right trigger button.
    KEYCODE_BUTTON_R1=103
    # Key code constant: L2 Button key.
    #  On a game controller, the L2 button should be either the button labeled L2
    #  or the bottom left trigger button.
    KEYCODE_BUTTON_L2=104
    # Key code constant: R2 Button key.
    #  On a game controller, the R2 button should be either the button labeled R2
    #  or the bottom right trigger button.
    KEYCODE_BUTTON_R2=105
    # Key code constant: Left Thumb Button key.
    #  On a game controller, the left thumb button indicates that the left (or only)
    #  joystick is pressed.
    KEYCODE_BUTTON_THUMBL=106
    # Key code constant: Right Thumb Button key.
    #  On a game controller, the right thumb button indicates that the right
    #  joystick is pressed.
    KEYCODE_BUTTON_THUMBR=107
    # Key code constant: Start Button key.
    #  On a game controller, the button labeled Start.
    KEYCODE_BUTTON_START=108
    # Key code constant: Select Button key.
    #  On a game controller, the button labeled Select.
    KEYCODE_BUTTON_SELECT=109
    # Key code constant: Mode Button key.
    #  On a game controller, the button labeled Mode.
    KEYCODE_BUTTON_MODE=110
    # Key code constant: Escape key.
    KEYCODE_ESCAPE=111
    # Key code constant: Forward Delete key.
    #  Deletes characters ahead of the insertion point, unlike {@link #KEYCODE_DEL}.
    KEYCODE_FORWARD_DEL=112
    # Key code constant: Left Control modifier key.
    KEYCODE_CTRL_LEFT=113
    # Key code constant: Right Control modifier key.
    KEYCODE_CTRL_RIGHT=114
    # Key code constant: Caps Lock key.
    KEYCODE_CAPS_LOCK=115
    # Key code constant: Scroll Lock key.
    KEYCODE_SCROLL_LOCK=116
    # Key code constant: Left Meta modifier key.
    KEYCODE_META_LEFT=117
    # Key code constant: Right Meta modifier key.
    KEYCODE_META_RIGHT=118
    # Key code constant: Function modifier key.
    KEYCODE_FUNCTION=119
    # Key code constant: System Request / Print Screen key.
    KEYCODE_SYSRQ=120
    # Key code constant: Break / Pause key.
    KEYCODE_BREAK=121
    # Key code constant: Home Movement key.
    #  Used for scrolling or moving the cursor around to the start of a line
    #  or to the top of a list.
    KEYCODE_MOVE_HOME=122
    # Key code constant: End Movement key.
    #  Used for scrolling or moving the cursor around to the end of a line
    #  or to the bottom of a list.
    KEYCODE_MOVE_END=123
    # Key code constant: Insert key.
    #  Toggles insert / overwrite edit mode.
    KEYCODE_INSERT=124
    # Key code constant: Forward key.
    #  Navigates forward in the history stack.  Complement of {@link #KEYCODE_BACK}.
    KEYCODE_FORWARD=125
    # Key code constant: Play media key.
    KEYCODE_MEDIA_PLAY=126
    # Key code constant: Pause media key.
    KEYCODE_MEDIA_PAUSE=127
    # Key code constant: Close media key.
    #  May be used to close a CD tray, for example.
    KEYCODE_MEDIA_CLOSE=128
    # Key code constant: Eject media key.
    #  May be used to eject a CD tray, for example.
    KEYCODE_MEDIA_EJECT=129
    # Key code constant: Record media key.
    KEYCODE_MEDIA_RECORD=130
    # Key code constant: F1 key.
    KEYCODE_F1=131
    # Key code constant: F2 key.
    KEYCODE_F2=132
    # Key code constant: F3 key.
    KEYCODE_F3=133
    # Key code constant: F4 key.
    KEYCODE_F4=134
    # Key code constant: F5 key.
    KEYCODE_F5=135
    # Key code constant: F6 key.
    KEYCODE_F6=136
    # Key code constant: F7 key.
    KEYCODE_F7=137
    # Key code constant: F8 key.
    KEYCODE_F8=138
    # Key code constant: F9 key.
    KEYCODE_F9=139
    # Key code constant: F10 key.
    KEYCODE_F10=140
    # Key code constant: F11 key.
    KEYCODE_F11=141
    # Key code constant: F12 key.
    KEYCODE_F12=142
    # Key code constant: Num Lock key.
    #  This is the Num Lock key it is different from {@link #KEYCODE_NUM}.
    #  This key alters the behavior of other keys on the numeric keypad.
    KEYCODE_NUM_LOCK=143
    # Key code constant: Numeric keypad '0' key.
    KEYCODE_NUMPAD_0=144
    # Key code constant: Numeric keypad '1' key.
    KEYCODE_NUMPAD_1=145
    # Key code constant: Numeric keypad '2' key.
    KEYCODE_NUMPAD_2=146
    # Key code constant: Numeric keypad '3' key.
    KEYCODE_NUMPAD_3=147
    # Key code constant: Numeric keypad '4' key.
    KEYCODE_NUMPAD_4=148
    # Key code constant: Numeric keypad '5' key.
    KEYCODE_NUMPAD_5=149
    # Key code constant: Numeric keypad '6' key.
    KEYCODE_NUMPAD_6=150
    # Key code constant: Numeric keypad '7' key.
    KEYCODE_NUMPAD_7=151
    # Key code constant: Numeric keypad '8' key.
    KEYCODE_NUMPAD_8=152
    # Key code constant: Numeric keypad '9' key.
    KEYCODE_NUMPAD_9=153
    # Key code constant: Numeric keypad '/' key (for division).
    KEYCODE_NUMPAD_DIVIDE=154
    # Key code constant: Numeric keypad '*' key (for multiplication).
    KEYCODE_NUMPAD_MULTIPLY=155
    # Key code constant: Numeric keypad '-' key (for subtraction).
    KEYCODE_NUMPAD_SUBTRACT=156
    # Key code constant: Numeric keypad '+' key (for addition).
    KEYCODE_NUMPAD_ADD=157
    # Key code constant: Numeric keypad '.' key (for decimals or digit grouping).
    KEYCODE_NUMPAD_DOT=158
    # Key code constant: Numeric keypad ',' key (for decimals or digit grouping).
    KEYCODE_NUMPAD_COMMA=159
    # Key code constant: Numeric keypad Enter key.
    KEYCODE_NUMPAD_ENTER=160
    # Key code constant: Numeric keypad '=' key.
    KEYCODE_NUMPAD_EQUALS=161
    # Key code constant: Numeric keypad '(' key.
    KEYCODE_NUMPAD_LEFT_PAREN=162
    # Key code constant: Numeric keypad ')' key.
    KEYCODE_NUMPAD_RIGHT_PAREN=163
    # Key code constant: Volume Mute key.
    #  Mutes the speaker, unlike {@link #KEYCODE_MUTE}.
    #  This key should normally be implemented as a toggle such that the first press
    #  mutes the speaker and the second press restores the original volume.
    KEYCODE_VOLUME_MUTE=164
    # Key code constant: Info key.
    #  Common on TV remotes to show additional information related to what is
    #  currently being viewed.
    KEYCODE_INFO=165
    # Key code constant: Channel up key.
    #  On TV remotes, increments the television channel.
    KEYCODE_CHANNEL_UP=166
    # Key code constant: Channel down key.
    #  On TV remotes, decrements the television channel.
    KEYCODE_CHANNEL_DOWN=167
    # Key code constant: Zoom in key.
    KEYCODE_ZOOM_IN=168
    # Key code constant: Zoom out key.
    KEYCODE_ZOOM_OUT=169
    # Key code constant: TV key.
    #  On TV remotes, switches to viewing live TV.
    KEYCODE_TV=170
    # Key code constant: Window key.
    #  On TV remotes, toggles picture-in-picture mode or other windowing functions.
    KEYCODE_WINDOW=171
    # Key code constant: Guide key.
    #  On TV remotes, shows a programming guide.
    KEYCODE_GUIDE=172
    # Key code constant: DVR key.
    #  On some TV remotes, switches to a DVR mode for recorded shows.
    KEYCODE_DVR=173
    # Key code constant: Bookmark key.
    #  On some TV remotes, bookmarks content or web pages.
    KEYCODE_BOOKMARK=174
    # Key code constant: Toggle captions key.
    #  Switches the mode for closed-captioning text, for example during television shows.
    KEYCODE_CAPTIONS=175
    # Key code constant: Settings key.
    #  Starts the system settings activity.
    KEYCODE_SETTINGS=176
    # Key code constant: TV power key.
    #  On TV remotes, toggles the power on a television screen.
    KEYCODE_TV_POWER=177
    # Key code constant: TV input key.
    #  On TV remotes, switches the input on a television screen.
    KEYCODE_TV_INPUT=178
    # Key code constant: Set-top-box power key.
    #  On TV remotes, toggles the power on an external Set-top-box.
    KEYCODE_STB_POWER=179
    # Key code constant: Set-top-box input key.
    #  On TV remotes, switches the input mode on an external Set-top-box.
    KEYCODE_STB_INPUT=180
    # Key code constant: A/V Receiver power key.
    #  On TV remotes, toggles the power on an external A/V Receiver.
    KEYCODE_AVR_POWER=181
    # Key code constant: A/V Receiver input key.
    #  On TV remotes, switches the input mode on an external A/V Receiver.
    KEYCODE_AVR_INPUT=182
    # Key code constant: Red "programmable" key.
    #  On TV remotes, acts as a contextual/programmable key.
    KEYCODE_PROG_RED=183
    # Key code constant: Green "programmable" key.
    #  On TV remotes, actsas a contextual/programmable key.
    KEYCODE_PROG_GREEN=184
    # Key code constant: Yellow "programmable" key.
    #  On TV remotes, acts as a contextual/programmable key.
    KEYCODE_PROG_YELLOW=185
    # Key code constant: Blue "programmable" key.
    #  On TV remotes, acts as a contextual/programmable key.
    KEYCODE_PROG_BLUE=186
    # Key code constant: App switch key.
    #  Should bring up the application switcher dialog.
    KEYCODE_APP_SWITCH=187
    # Key code constant: Generic Game Pad Button #1.*/
    KEYCODE_BUTTON_1=188
    # Key code constant: Generic Game Pad Button #2.*/
    KEYCODE_BUTTON_2=189
    # Key code constant: Generic Game Pad Button #3.*/
    KEYCODE_BUTTON_3=190
    # Key code constant: Generic Game Pad Button #4.*/
    KEYCODE_BUTTON_4=191
    # Key code constant: Generic Game Pad Button #5.*/
    KEYCODE_BUTTON_5=192
    # Key code constant: Generic Game Pad Button #6.*/
    KEYCODE_BUTTON_6=193
    # Key code constant: Generic Game Pad Button #7.*/
    KEYCODE_BUTTON_7=194
    # Key code constant: Generic Game Pad Button #8.*/
    KEYCODE_BUTTON_8=195
    # Key code constant: Generic Game Pad Button #9.*/
    KEYCODE_BUTTON_9=196
    # Key code constant: Generic Game Pad Button #10.*/
    KEYCODE_BUTTON_10=197
    # Key code constant: Generic Game Pad Button #11.*/
    KEYCODE_BUTTON_11=198
    # Key code constant: Generic Game Pad Button #12.*/
    KEYCODE_BUTTON_12=199
    # Key code constant: Generic Game Pad Button #13.*/
    KEYCODE_BUTTON_13=200
    # Key code constant: Generic Game Pad Button #14.*/
    KEYCODE_BUTTON_14=201
    # Key code constant: Generic Game Pad Button #15.*/
    KEYCODE_BUTTON_15=202
    # Key code constant: Generic Game Pad Button #16.*/
    KEYCODE_BUTTON_16=203
    # Key code constant: Language Switch key.
    #  Toggles the current input language such as switching between English and Japanese on
    #  a QWERTY keyboard.  On some devices, the same function may be performed by
    #  pressing Shift+Spacebar.
    KEYCODE_LANGUAGE_SWITCH=204
    # Key code constant: Manner Mode key.
    #  Toggles silent or vibrate mode on and off to make the device behave more politely
    #  in certain settings such as on a crowded train.  On some devices, the key may only
    #  operate when long-pressed.
    KEYCODE_MANNER_MODE=205
    # Key code constant: 3D Mode key.
    #  Toggles the display between 2D and 3D mode.
    KEYCODE_3D_MODE=206
    # Key code constant: Contacts special function key.
    #  Used to launch an address book application.
    KEYCODE_CONTACTS=207
    # Key code constant: Calendar special function key.
    #  Used to launch a calendar application.
    KEYCODE_CALENDAR=208
    # Key code constant: Music special function key.
    #  Used to launch a music player application.
    KEYCODE_MUSIC=209
    # Key code constant: Calculator special function key.
    #  Used to launch a calculator application.
    KEYCODE_CALCULATOR=210
    # Key code constant: Japanese full-width / half-width key.
    KEYCODE_ZENKAKU_HANKAKU=211
    # Key code constant: Japanese alphanumeric key.
    KEYCODE_EISU=212
    # Key code constant: Japanese non-conversion key.
    KEYCODE_MUHENKAN=213
    # Key code constant: Japanese conversion key.
    KEYCODE_HENKAN=214
    # Key code constant: Japanese katakana / hiragana key.
    KEYCODE_KATAKANA_HIRAGANA=215
    # Key code constant: Japanese Yen key.
    KEYCODE_YEN=216
    # Key code constant: Japanese Ro key.
    KEYCODE_RO=217
    # Key code constant: Japanese kana key.
    KEYCODE_KANA=218
    # Key code constant: Assist key.
    #  Launches the global assist activity.  Not delivered to applications.
    KEYCODE_ASSIST=219
    # Key code constant: Brightness Down key.
    #  Adjusts the screen brightness down.
    KEYCODE_BRIGHTNESS_DOWN=220
    # Key code constant: Brightness Up key.
    #  Adjusts the screen brightness up.
    KEYCODE_BRIGHTNESS_UP=221
    # Key code constant: Audio Track key.
    #  Switches the audio tracks.
    KEYCODE_MEDIA_AUDIO_TRACK=222
    # Key code constant: Sleep key.
    #  Puts the device to sleep.  Behaves somewhat like {@link #KEYCODE_POWER} but it
    #  has no effect if the device is already asleep.
    KEYCODE_SLEEP=223
    # Key code constant: Wakeup key.
    #  Wakes up the device.  Behaves somewhat like {@link #KEYCODE_POWER} but it
    #  has no effect if the device is already awake.
    KEYCODE_WAKEUP=224
    # Key code constant: Pairing key.
    #  Initiates peripheral pairing mode. Useful for pairing remote control
    #  devices or game controllers, especially if no other input mode is
    #  available.
    KEYCODE_PAIRING=225
    # Key code constant: Media Top Menu key.
    #  Goes to the top of media menu.
    KEYCODE_MEDIA_TOP_MENU=226
    # Key code constant: '11' key.
    KEYCODE_11=227
    # Key code constant: '12' key.
    KEYCODE_12=228
    # Key code constant: Last Channel key.
    #  Goes to the last viewed channel.
    KEYCODE_LAST_CHANNEL=229
    # Key code constant: TV data service key.
    #  Displays data services like weather, sports.
    KEYCODE_TV_DATA_SERVICE=230
    # Key code constant: Voice Assist key.
    #  Launches the global voice assist activity. Not delivered to applications.
    KEYCODE_VOICE_ASSIST=231
    # Key code constant: Radio key.
    #  Toggles TV service / Radio service.
    KEYCODE_TV_RADIO_SERVICE=232
    # Key code constant: Teletext key.
    #  Displays Teletext service.
    KEYCODE_TV_TELETEXT=233
    # Key code constant: Number entry key.
    #  Initiates to enter multi-digit channel nubmber when each digit key is assigned
    #  for selecting separate channel. Corresponds to Number Entry Mode (0x1D) of CEC
    #  User Control Code.
    KEYCODE_TV_NUMBER_ENTRY=234
    # Key code constant: Analog Terrestrial key.
    #  Switches to analog terrestrial broadcast service.
    KEYCODE_TV_TERRESTRIAL_ANALOG=235
    # Key code constant: Digital Terrestrial key.
    #  Switches to digital terrestrial broadcast service.
    KEYCODE_TV_TERRESTRIAL_DIGITAL=236
    # Key code constant: Satellite key.
    #  Switches to digital satellite broadcast service.
    KEYCODE_TV_SATELLITE=237
    # Key code constant: BS key.
    #  Switches to BS digital satellite broadcasting service available in Japan.
    KEYCODE_TV_SATELLITE_BS=238
    # Key code constant: CS key.
    #  Switches to CS digital satellite broadcasting service available in Japan.
    KEYCODE_TV_SATELLITE_CS=239
    # Key code constant: BS/CS key.
    #  Toggles between BS and CS digital satellite services.
    KEYCODE_TV_SATELLITE_SERVICE=240
    # Key code constant: Toggle Network key.
    #  Toggles selecting broacast services.
    KEYCODE_TV_NETWORK=241
    # Key code constant: Antenna/Cable key.
    #  Toggles broadcast input source between antenna and cable.
    KEYCODE_TV_ANTENNA_CABLE=242
    # Key code constant: HDMI #1 key.
    #  Switches to HDMI input #1.
    KEYCODE_TV_INPUT_HDMI_1=243
    # Key code constant: HDMI #2 key.
    #  Switches to HDMI input #2.
    KEYCODE_TV_INPUT_HDMI_2=244
    # Key code constant: HDMI #3 key.
    #  Switches to HDMI input #3.
    KEYCODE_TV_INPUT_HDMI_3=245
    # Key code constant: HDMI #4 key.
    #  Switches to HDMI input #4.
    KEYCODE_TV_INPUT_HDMI_4=246
    # Key code constant: Composite #1 key.
    #  Switches to composite video input #1.
    KEYCODE_TV_INPUT_COMPOSITE_1=247
    # Key code constant: Composite #2 key.
    #  Switches to composite video input #2.
    KEYCODE_TV_INPUT_COMPOSITE_2=248
    # Key code constant: Component #1 key.
    #  Switches to component video input #1.
    KEYCODE_TV_INPUT_COMPONENT_1=249
    # Key code constant: Component #2 key.
    #  Switches to component video input #2.
    KEYCODE_TV_INPUT_COMPONENT_2=250
    # Key code constant: VGA #1 key.
    #  Switches to VGA (analog RGB) input #1.
    KEYCODE_TV_INPUT_VGA_1=251
    # Key code constant: Audio description key.
    #  Toggles audio description off / on.
    KEYCODE_TV_AUDIO_DESCRIPTION=252
    # Key code constant: Audio description mixing volume up key.
    #  Louden audio description volume as compared with normal audio volume.
    KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP=253
    # Key code constant: Audio description mixing volume down key.
    #  Lessen audio description volume as compared with normal audio volume.
    KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN=254
    # Key code constant: Zoom mode key.
    #  Changes Zoom mode (Normal, Full, Zoom, Wide-zoom, etc.)
    KEYCODE_TV_ZOOM_MODE=255
    # Key code constant: Contents menu key.
    #  Goes to the title list. Corresponds to Contents Menu (0x0B) of CEC User Control
    #  Code
    KEYCODE_TV_CONTENTS_MENU=256
    # Key code constant: Media context menu key.
    #  Goes to the context menu of media contents. Corresponds to Media Context-sensitive
    #  Menu (0x11) of CEC User Control Code.
    KEYCODE_TV_MEDIA_CONTEXT_MENU=257
    # Key code constant: Timer programming key.
    #  Goes to the timer recording menu. Corresponds to Timer Programming (0x54) of
    #  CEC User Control Code.
    KEYCODE_TV_TIMER_PROGRAMMING=258
    # Key code constant: Help key.
    KEYCODE_HELP=259
    # Key code constant: Navigate to previous key.
    #  Goes backward by one item in an ordered collection of items.
    KEYCODE_NAVIGATE_PREVIOUS=260
    # Key code constant: Navigate to next key.
    #  Advances to the next item in an ordered collection of items.
    KEYCODE_NAVIGATE_NEXT=261
    # Key code constant: Navigate in key.
    #  Activates the item that currently has focus or expands to the next level of a navigation
    #  hierarchy.
    KEYCODE_NAVIGATE_IN=262
    # Key code constant: Navigate out key.
    #  Backs out one level of a navigation hierarchy or collapses the item that currently has
    #  focus.
    KEYCODE_NAVIGATE_OUT=263
    # Key code constant: Skip forward media key.
    KEYCODE_MEDIA_SKIP_FORWARD=272
    # Key code constant: Skip backward media key.
    KEYCODE_MEDIA_SKIP_BACKWARD=273
    # Key code constant: Step forward media key.
    #  Steps media forward, one frame at a time.
    KEYCODE_MEDIA_STEP_FORWARD=274
    # Key code constant: Step backward media key.
    #  Steps media backward, one frame at a time.
    KEYCODE_MEDIA_STEP_BACKWARD=275

    KEYCODES=('KEYCODE_SOFT_LEFT' 'KEYCODE_SOFT_RIGHT' 'KEYCODE_HOME' 'KEYCODE_BACK' 'KEYCODE_CALL' 'KEYCODE_ENDCALL' 'KEYCODE_0' 'KEYCODE_1' 'KEYCODE_2' 'KEYCODE_3' 'KEYCODE_4' 'KEYCODE_5' 'KEYCODE_6' 'KEYCODE_7' 'KEYCODE_8' 'KEYCODE_9' 'KEYCODE_STAR' 'KEYCODE_POUND' 'KEYCODE_DPAD_UP' 'KEYCODE_DPAD_DOWN' 'KEYCODE_DPAD_LEFT' 'KEYCODE_DPAD_RIGHT' 'KEYCODE_DPAD_CENTER' 'KEYCODE_VOLUME_UP' 'KEYCODE_VOLUME_DOWN' 'KEYCODE_POWER' 'KEYCODE_CAMERA' 'KEYCODE_CLEAR' 'KEYCODE_A' 'KEYCODE_B' 'KEYCODE_C' 'KEYCODE_D' 'KEYCODE_E' 'KEYCODE_F' 'KEYCODE_G' 'KEYCODE_H' 'KEYCODE_I' 'KEYCODE_J' 'KEYCODE_K' 'KEYCODE_L' 'KEYCODE_M' 'KEYCODE_N' 'KEYCODE_O' 'KEYCODE_P' 'KEYCODE_Q' 'KEYCODE_R' 'KEYCODE_S' 'KEYCODE_T' 'KEYCODE_U' 'KEYCODE_V' 'KEYCODE_W' 'KEYCODE_X' 'KEYCODE_Y' 'KEYCODE_Z' 'KEYCODE_COMMA' 'KEYCODE_PERIOD' 'KEYCODE_ALT_LEFT' 'KEYCODE_ALT_RIGHT' 'KEYCODE_SHIFT_LEFT' 'KEYCODE_SHIFT_RIGHT' 'KEYCODE_TAB' 'KEYCODE_SPACE' 'KEYCODE_SYM' 'KEYCODE_EXPLORER' 'KEYCODE_ENVELOPE' 'KEYCODE_ENTER' 'KEYCODE_DEL' 'KEYCODE_GRAVE' 'KEYCODE_MINUS' 'KEYCODE_EQUALS' 'KEYCODE_LEFT_BRACKET' 'KEYCODE_RIGHT_BRACKET' 'KEYCODE_BACKSLASH' 'KEYCODE_SEMICOLON' 'KEYCODE_APOSTROPHE' 'KEYCODE_SLASH' 'KEYCODE_AT' 'KEYCODE_NUM' 'KEYCODE_HEADSETHOOK' 'KEYCODE_FOCUS' 'KEYCODE_PLUS' 'KEYCODE_MENU' 'KEYCODE_NOTIFICATION' 'KEYCODE_SEARCH' 'KEYCODE_MEDIA_PLAY_PAUSE=' 'KEYCODE_MEDIA_STOP' 'KEYCODE_MEDIA_NEXT' 'KEYCODE_MEDIA_PREVIOUS' 'KEYCODE_MEDIA_REWIND' 'KEYCODE_MEDIA_FAST_FORWARD' 'KEYCODE_MUTE' 'KEYCODE_PAGE_UP' 'KEYCODE_PAGE_DOWN' 'KEYCODE_PICTSYMBOLS' 'KEYCODE_SWITCH_CHARSET' 'KEYCODE_BUTTON_A' 'KEYCODE_BUTTON_B' 'KEYCODE_BUTTON_C' 'KEYCODE_BUTTON_X' 'KEYCODE_BUTTON_Y' 'KEYCODE_BUTTON_Z' 'KEYCODE_BUTTON_L1' 'KEYCODE_BUTTON_R1' 'KEYCODE_BUTTON_L2' 'KEYCODE_BUTTON_R2' 'KEYCODE_BUTTON_THUMBL' 'KEYCODE_BUTTON_THUMBR' 'KEYCODE_BUTTON_START' 'KEYCODE_BUTTON_SELECT' 'KEYCODE_BUTTON_MODE' 'KEYCODE_ESCAPE' 'KEYCODE_FORWARD_DEL' 'KEYCODE_CTRL_LEFT' 'KEYCODE_CTRL_RIGHT' 'KEYCODE_CAPS_LOCK' 'KEYCODE_SCROLL_LOCK' 'KEYCODE_META_LEFT' 'KEYCODE_META_RIGHT' 'KEYCODE_FUNCTION' 'KEYCODE_SYSRQ' 'KEYCODE_BREAK' 'KEYCODE_MOVE_HOME' 'KEYCODE_MOVE_END' 'KEYCODE_INSERT' 'KEYCODE_FORWARD' 'KEYCODE_MEDIA_PLAY' 'KEYCODE_MEDIA_PAUSE' 'KEYCODE_MEDIA_CLOSE' 'KEYCODE_MEDIA_EJECT' 'KEYCODE_MEDIA_RECORD' 'KEYCODE_F1' 'KEYCODE_F2' 'KEYCODE_F3' 'KEYCODE_F4' 'KEYCODE_F5' 'KEYCODE_F6' 'KEYCODE_F7' 'KEYCODE_F8' 'KEYCODE_F9' 'KEYCODE_F10' 'KEYCODE_F11' 'KEYCODE_F12' 'KEYCODE_NUM_LOCK' 'KEYCODE_NUMPAD_0' 'KEYCODE_NUMPAD_1' 'KEYCODE_NUMPAD_2' 'KEYCODE_NUMPAD_3' 'KEYCODE_NUMPAD_4' 'KEYCODE_NUMPAD_5' 'KEYCODE_NUMPAD_6' 'KEYCODE_NUMPAD_7' 'KEYCODE_NUMPAD_8' 'KEYCODE_NUMPAD_9' 'KEYCODE_NUMPAD_DIVIDE' 'KEYCODE_NUMPAD_MULTIPLY' 'KEYCODE_NUMPAD_SUBTRACT' 'KEYCODE_NUMPAD_ADD' 'KEYCODE_NUMPAD_DOT' 'KEYCODE_NUMPAD_COMMA' 'KEYCODE_NUMPAD_ENTER' 'KEYCODE_NUMPAD_EQUALS' 'KEYCODE_NUMPAD_LEFT_PAREN' 'KEYCODE_NUMPAD_RIGHT_PAREN' 'KEYCODE_VOLUME_MUTE' 'KEYCODE_INFO' 'KEYCODE_CHANNEL_UP' 'KEYCODE_CHANNEL_DOWN' 'KEYCODE_ZOOM_IN' 'KEYCODE_ZOOM_OUT' 'KEYCODE_TV' 'KEYCODE_WINDOW' 'KEYCODE_GUIDE' 'KEYCODE_DVR' 'KEYCODE_BOOKMARK' 'KEYCODE_CAPTIONS' 'KEYCODE_SETTINGS' 'KEYCODE_TV_POWER' 'KEYCODE_TV_INPUT' 'KEYCODE_STB_POWER' 'KEYCODE_STB_INPUT' 'KEYCODE_AVR_POWER' 'KEYCODE_AVR_INPUT' 'KEYCODE_PROG_RED' 'KEYCODE_PROG_GREEN' 'KEYCODE_PROG_YELLOW' 'KEYCODE_PROG_BLUE' 'KEYCODE_APP_SWITCH' 'KEYCODE_BUTTON_1' 'KEYCODE_BUTTON_2' 'KEYCODE_BUTTON_3' 'KEYCODE_BUTTON_4' 'KEYCODE_BUTTON_5' 'KEYCODE_BUTTON_6' 'KEYCODE_BUTTON_7' 'KEYCODE_BUTTON_8' 'KEYCODE_BUTTON_9' 'KEYCODE_BUTTON_10' 'KEYCODE_BUTTON_11' 'KEYCODE_BUTTON_12' 'KEYCODE_BUTTON_13' 'KEYCODE_BUTTON_14' 'KEYCODE_BUTTON_15' 'KEYCODE_BUTTON_16' 'KEYCODE_LANGUAGE_SWITCH' 'KEYCODE_MANNER_MODE' 'KEYCODE_3D_MODE' 'KEYCODE_CONTACTS' 'KEYCODE_CALENDAR' 'KEYCODE_MUSIC' 'KEYCODE_CALCULATOR' 'KEYCODE_ZENKAKU_HANKAKU' 'KEYCODE_EISU' 'KEYCODE_MUHENKAN' 'KEYCODE_HENKAN' 'KEYCODE_KATAKANA_HIRAGANA' 'KEYCODE_YEN' 'KEYCODE_RO' 'KEYCODE_KANA' 'KEYCODE_ASSIST' 'KEYCODE_BRIGHTNESS_DOWN' 'KEYCODE_BRIGHTNESS_UP' 'KEYCODE_MEDIA_AUDIO_TRACK' 'KEYCODE_SLEEP' 'KEYCODE_WAKEUP' 'KEYCODE_PAIRING' 'KEYCODE_MEDIA_TOP_MENU' 'KEYCODE_11' 'KEYCODE_12' 'KEYCODE_LAST_CHANNEL' 'KEYCODE_TV_DATA_SERVICE' 'KEYCODE_VOICE_ASSIST' 'KEYCODE_TV_RADIO_SERVICE' 'KEYCODE_TV_TELETEXT' 'KEYCODE_TV_NUMBER_ENTRY' 'KEYCODE_TV_TERRESTRIAL_ANALOG' 'KEYCODE_TV_TERRESTRIAL_DIGITAL' 'KEYCODE_TV_SATELLITE' 'KEYCODE_TV_SATELLITE_BS' 'KEYCODE_TV_SATELLITE_CS' 'KEYCODE_TV_SATELLITE_SERVICE' 'KEYCODE_TV_NETWORK' 'KEYCODE_TV_ANTENNA_CABLE' 'KEYCODE_TV_INPUT_HDMI_1' 'KEYCODE_TV_INPUT_HDMI_2' 'KEYCODE_TV_INPUT_HDMI_3' 'KEYCODE_TV_INPUT_HDMI_4' 'KEYCODE_TV_INPUT_COMPOSITE_1' 'KEYCODE_TV_INPUT_COMPOSITE_2' 'KEYCODE_TV_INPUT_COMPONENT_1' 'KEYCODE_TV_INPUT_COMPONENT_2' 'KEYCODE_TV_INPUT_VGA_1' 'KEYCODE_TV_AUDIO_DESCRIPTION' 'KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP' 'KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN' 'KEYCODE_TV_ZOOM_MODE' 'KEYCODE_TV_CONTENTS_MENU' 'KEYCODE_TV_MEDIA_CONTEXT_MENU' 'KEYCODE_TV_TIMER_PROGRAMMING' 'KEYCODE_HELP' 'KEYCODE_NAVIGATE_PREVIOUS' 'KEYCODE_NAVIGATE_NEXT' 'KEYCODE_NAVIGATE_IN' 'KEYCODE_NAVIGATE_OUT' 'KEYCODE_MEDIA_SKIP_FORWARD' 'KEYCODE_MEDIA_SKIP_BACKWARD' 'KEYCODE_MEDIA_STEP_FORWARD' 'KEYCODE_MEDIA_STEP_BACKWARD')

    function eadb-input-key {
        _eadb shell input keyevent "$@"
    }

    function eadb-key {
        _eadb shell input keyevent "$@"
    }

    function eadb-sendkey {
        _eadb shell input keyevent "$@"
    }

    function eadb_list-keys {
        if [ "$1" == "--shortlist" ]; then
            for key in ${KEYCODES[@]}; do
                echo -n "$key "
            done
        else
            for key in ${KEYCODES[@]}; do
                echo "$key"
            done
        fi
    }

    function eadb_toggle-silent {  
        if [ -z "$EADB_SILENCE_DEFAULT_PROMPT" ]; then
            EADB_SILENCE_DEFAULT_PROMPT=true
        else
            unset EADB_SILENCE_DEFAULT_PROMPT
        fi
    }

    function eadb_push {
        echo "First param: $1"
        for device in `eadb_select true`; do
            adb-push-with-devid $device "$@"
        done
    }

    function eadb_devices {
        adb devices | tail -n +2 | while read devout; do
            device=`echo "$devout" | awk '{print $1}'`
            status=`echo "$devout" | awk '{print $2}'`
            if [ -n "$device" ]; then
                model=`eadb_model-for "$device"`
                name=""
                if [ -f "$HOME/.eadb/$device" ]; then
                    name=`cat "$HOME/.eadb/$device"`
                fi
                printf "%-32s %-10s %s\n" "$device" "$status" "$model"
            fi
        done
    }

    function _eadb {
        echo "$ADB_CURRENT_DEVICE" | xargs -i adb -s {} "$@"
    }

    function eadb_commands {
        adb 2>&1 | /bin/grep -o '^  adb [^ ]*' | sed 's/^  adb //g' | sort | uniq
        typeset -F | awk '{print $3}' | /bin/grep eadb- | sed 's/^eadb-//g'
        typeset -F | awk '{print $3}' | /bin/grep eadb_ | sed 's/^eadb_//g'
    }

    if [ -z "$1" ]; then
        eadb help
        return;
    fi

    if [ "$1" == "shell" ] && [ "$2" == "pull" ]; then
        shift
    fi

    if [ "$1" == "shell" ] && [ "$2" == "push" ]; then
        shift
    fi

    if [ "$1" == "--shortlist" ]; then
        eadb_commands | sort | uniq | tr "\\n" " "
    elif [ "help" == "$1" ] || [ "-h" == "$1" ] || [ "--help" == "$1" ] || [ -z "$1" ]; then
            adb -h
            echo
            echo "eadb specific commands:"
            echo "  setdefault                    - Makes a device from the list the default device when running eadb."
            echo "  unsetdefault                  - Allows the prompt to show up if there are more than one devices."
            echo "  toggle-silent                 - Shows/hides the device sn/name when using a default device."
            echo "  show-default                  - Shows the current default device"
            echo "  name                          - Stores a name for a device"
            echo "  wait (mode)                   - Waits until a specific mode is detected"
            echo "  clogcat                       - Runs a colorized logcat"
            echo "  plogcat [package name]        - Runs logcat on a specific package name"
            echo "  install-mirroring             - Installs chromecast mirroring support on rooted device"
            echo "  slogcat (-p package_name) search terms"
            echo "  screenshot                    - Grabs a screenshot"
            echo "  start                         - Start either the default activity or a specified activity"
            echo "  input-text                    - Enter text on the device"
            echo "  input-key                     - Send a key or set of keys"
    else
        if [ "$(type -t eadb_$1)" = function ]; then
            local cmd="$1"
            shift
            eadb_$cmd "$@"
        elif [ "$(type -t eadb-$1)" = function ]; then
            if [ "-s" == "$1" ] && [ "all" == "$2" ]; then
                shift
                shift
                eadb_select
                for device in `eadb_select true`; do
                    ADB_CURRENT_DEVICE="$device"
                    _eadb "$@"
                done

                local cmd="$1"
                shift

                unset ADB_CURRENT_DEVICE

                for device in `eadb_select true`; do
                    ADB_CURRENT_DEVICE="$device"
                    eadb-$cmd "$@"
                done

                unset ADB_CURRENT_DEVICE
            else
                local cmd="$1"
                shift

                unset ADB_CURRENT_DEVICE

                for device in `eadb_select true`; do
                    ADB_CURRENT_DEVICE="$device"
                    eadb-$cmd "$@"
                done

                unset ADB_CURRENT_DEVICE
            fi
        else
            unset ADB_CURRENT_DEVICE

            for device in `eadb_select true`; do
                ADB_CURRENT_DEVICE="$device"
                _eadb "$@"
            done

            unset ADB_CURRENT_DEVICE
        fi
    fi
}

_eadbcompletescript()
{
    compopt +o default
     local path="`dirname $(readlink -f $0)`"
    _script_commands=$(eadb --shortlist)

    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD - 1]}"
    prev2="${COMP_WORDS[COMP_CWORD - 2]}"
    if [ "push" == "$prev" ] || [ "install" == "$prev" ] || [ "install" == "$prev2" ] && [ "-r" == "$prev" ]; then
        compopt -o default
        COMPREPLY=()
    elif [ "pull" == "$prev" ]; then
        COMPREPLY=( $(compgen -W "`adb shell 'ls -F ${cur} 2>/dev/null' | sed 's/\r//g' | sed 's_^\(ld\|d\) \(.*\)_\2_' | sed 's/^[-l?]* //g' | sort | uniq | tr "\\n" " "`" -- ${cur}) )
    elif [ "input-key" == "$prev" ] || [ "key" == "$prev" ] || [ "sendkey" == "$prev" ]; then
        _keys=$(eadb list-keys --shortlist)
        COMPREPLY=( $(compgen -W "${_keys}" -- ${cur}) )
    else
        COMPREPLY=( $(compgen -W "${_script_commands}" -- ${cur}) )
    fi

    return 0
}
complete -o filenames -F _eadbcompletescript eadb

